/*This tool will allow a user to automatically identify what a document is about. 
Imagine you have a text document and you need to automatically identify what it is about.  
As a human that’s easy – just read it.  For this tool, the answer will be the ten most 
common words from the document  - in the hope that these convey the topic – it’s up to 
the user to put meaning on the set of words when they see the answer.
The most basic version of the tool is that  the user enters a file name at the command line, 
and the system returns the top ten words (with word counts)  such as Christmas (12), train(6) etc.
So the words returned should be informative.  E.g. if there is a document about 
Christmas activities in Dublin City Centre, the words from the document that might convey what this document is about are:
Christmas, Dublin, City, Centre,  Activities, Shops, People, Tree, Lights etc
It certainly wouldn’t help to have words such as “is, “a, “this”.. etc. 
And nouns help too  - so perhaps there is a way of identifying unhelpful words?

Advanced features might include things such as:
•	A GUI to run this 
•	A GUI to display the results back
•	The ability for the user to say what words to exclude form the topic finder.
•	What else?
1.the user enters a file name at the command line
2.the system returns the top ten words (with word counts)
3.the ability for the user to say what words to exclude form the topic finder
*/
package com.assignment.oop;
/*
 * *******************************
 * Assignment. Topic: Robo-Reader
 * Date: 28/02/16
 * @author Nataliya Kizyuk
 * *******************************
 */
public class RoboToolControl 
{
    public static void main(String[] args) 
    {
        //display message to the user
        System.out.println("Welcome to the Robo-Reader tool! ");
        System.out.println("This tool will allow you to automatically identify what a document is about.");
        System.out.println();//empty line
        
        //instanciating classes
        InputGetter documentName      = new InputGetter();
        InputTester properName        = new InputTester();
        DocumentReader textDocument   = new DocumentReader();
        //WordCounter wordList        = new WordCounter();
        
        textDocument.ReadDocument( properName.TestName(documentName.GetName()));
    }   
}


package com.assignment.oop;

import java.util.Scanner;
 /*
 * *******************************
 * Assignment. Topic: Robo-Reader
 * Date: 28/02/16
 * @author Nataliya Kizyuk
 * *******************************
 */
public class InputGetter 
{
    protected String document_name;
    protected Scanner inputReader;
    
    public String GetName()
    {
        //to get input (file name)from user from command prompt
        this.inputReader = new Scanner(System.in);
        
        //display message to the user
        System.out.println("Please enter the name of the text document in the format - document_name.txt: ");

        //Getting input in String format
        this.document_name = this.inputReader.nextLine();
        
        return this.document_name;
    }  
}


package com.assignment.oop;
 /*
 * *******************************
 * Assignment. Topic: Robo-Reader
 * Date: 28/02/16
 * @author Nataliya Kizyuk
 * *******************************
 *'TestDocumentname()'Class with 'TestName()' method that will check the format 
 * of the document's name inputed by user
 */
public class InputTester 
{
    private boolean returnVal;
    private String expectedInput;
    
    public String TestName(String documentName)
    {
        //Checking if inputed String name is ending with ".txt"
        this.returnVal = documentName.endsWith(".txt");
        
        if(this.returnVal == true)
        {
            System.out.println( "The name of the document that you want to identify is: " + documentName);
            this.expectedInput = documentName;
        }
        else
        {
            //add(concatenate)".txt" to a document name and save it to the String variable
            this.expectedInput = documentName.concat(".txt");
          
            System.out.println("Invalid  format of input!!! You entered " + documentName + ", instead of " + this.expectedInput);    
        }
        return this.expectedInput;
    }   
}


package com.assignment.oop;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
 /*
 * *******************************
 * Assignment. Topic: Robo-Reader
 * Date: 28/02/16
 * @author Nataliya Kizyuk
 * *******************************
 *Method: Read Document */
public class DocumentReader 
{
    protected File myDocument;
    protected Scanner myScanner;
    private String line;
    protected StringBuffer wordsString;
    protected String[] wordsArray;
    
    public void ReadDocument(String DocumentName)
    {
        try
        { 
            this.myDocument  =  new File(DocumentName);
            this.myScanner   =  new Scanner(this.myDocument);
            this.wordsString =  new StringBuffer();
            
            System.out.println(this.myScanner.hasNextLine());
            
            while(myScanner.hasNextLine())
            {
                this.line = myScanner.next().toLowerCase();

                this.wordsString.append(this.line + " ");  
            }
            //CountWord curWord = new CountWord();
            this.myScanner.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        this.wordsArray = this.wordsString.toString().split(" ");
        
        for (int i = 0; i<this.wordsArray.length; i++) 
        {
           // System.out.println(wordsArray[i]);
        }
        WordCounter counter1 = new WordCounter(this.wordsArray);
    }
}

package com.assignment.oop;
import java.io.File;
import java.util.ArrayList; //reference: https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html
import java.util.Scanner;
 /*
 * *******************************
 * Assignment. Topic: Robo-Reader
 * Date: 01/03/16
 * @author Nataliya Kizyuk
 * *******************************
 */
public class WordCounter 
{ 
    String currentWord;
    String nextWord;
    int counter;
    public WordCounter(String[] wordsArray)
    {
        try
        {
            for (int i = 0; i < wordsArray.length; i++)
            {    
                this.currentWord = wordsArray[i];
                this.counter = 1;
                if(this.currentWord.length()>4)
                {
                    for(int j = 0; j < wordsArray.length; j++)
                    {
                        this.nextWord = wordsArray[j];
                        if(this.currentWord.equals(this.nextWord))
                        {
                            this.counter++; 
                        }   
                    }
                    System.out.println(this.currentWord);
                    System.out.print("number:"+this.counter+" ; ");
                    System.out.println();
                }
                
                //Word nextWord = new Word(this.word1, this.counter);
                //this.myList.add(nextWord);
            }
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
    }
}
